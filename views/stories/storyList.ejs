<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width initial-scale=1.0">
  <meta name="description" content="Browse and search a wide variety of stories in our Stories section.">
  <title>Stories Collection | DIARY.</title>

  <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
  <script src="https://kit.fontawesome.com/0790e1818c.js" crossorigin="anonymous"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/moment/min/moment.min.js"></script>

  <script src="https://cdn.tailwindcss.com"></script>

  <style>
    .story-card {
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .scrollbar-hide::-webkit-scrollbar {
      display: none;
    }

    .scrollbar-hide {
      -ms-overflow-style: none;
      scrollbar-width: none;
    }

    .category-btn {
      flex-shrink: 0;
      padding: 0.5rem 1rem;
      border-radius: 9999px;
      border: 1px solid #e5e7eb;
      background-color: white;
      color: #1f2937;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      cursor: pointer;
      transition: all 0.2s;
    }

    .category-btn:hover {
      border-color: #d1d5db;
      background-color: #f9fafb;
    }

    .category-btn.active {
      background-color: #eff6ff;
      border-color: #3b82f6;
      color: #1e40af;
    }

    .hidden {
      display: none;
    }

    .story-card:hover {
      transform: scale(1.05);
      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.3);
      z-index: 10;
    }

    .story-card:hover .story-details {
      opacity: 1;
    }

    .story-image {
      height: 200px;
      object-fit: cover;
    }

    .navbar {
      font-family: "Pacifico";
      font-size: large;
    }





    @keyframes spin {
      to {
        transform: rotate(360deg);
      }
    }

    .fade-out {
      animation: fadeOut 0.3s ease forwards;
    }

    @keyframes fadeOut {
      to {
        opacity: 0;
        visibility: hidden;
      }
    }

    .skeleton-loader {
      background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
      background-size: 200% 100%;
      animation: shimmer 1.5s infinite;
      border-radius: 4px;
    }

    @keyframes shimmer {
      0% {
        background-position: 200% 0;
      }

      100% {
        background-position: -200% 0;
      }
    }
  </style>
</head>

<body>

  <div id="container" class="w-full h-full">

    <!-- Navbar -->
    <nav class="bg-white shadow-lg sticky top-0 z-50 ">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between h-16">
          <!-- Left side - Logo and navigation links -->
          <div class="flex items-center justify-between navbar">
            <!-- Logo -->
            <div class="flex-shrink-0 flex items-center">
              <a href="/stories">
                <span class=" diary">
                  <i class="fas fa-feather-alt mr-3 text-accent"></i>
                  Diary
                </span>
              </a>
            </div>

            <!-- Desktop Navigation Links -->
            <div class="hidden md:ml-8 md:flex md:space-x-8">
              <a href="/stories"
                class="flex items-center h-16 px-2 text-sm font-medium text-gray-900 border-b-2 border-accent">
                <span>Stories</span>
              </a>
              <a href="/stories/newWrite"
                class="flex items-center h-16 px-2 text-sm font-medium text-gray-500 hover:text-gray-900 border-b-2 border-transparent hover:border-primary-400 transition-all duration-200">
                <span>Write</span>
              </a>
            </div>
          </div>

          <!-- Right side - Search, notifications, profile -->
          <div class="flex items-center">
            <!-- Search button -->
            <div class="flex-shrink-0 mr-2">
              <a href="/search">
                <button
                  class="p-2 rounded-full bg-primary-50 hover:bg-primary-100 text-primary-600 transition-all duration-200">
                  <i class="fas fa-search"></i>
                </button>
              </a>
            </div>
            <% if(currUser) { %>
              <!-- <div class="flex-shrink-0 mr-2 relative">
                <a href="/notification">
                  <button onclick=""
                    class="p-2 rounded-full bg-primary-50 hover:bg-primary-100 text-primary-600 transition-all duration-200">
                    <i class="fas fa-bell"></i>
                    <span id="red-dot"
                      class="red-dot absolute -top-1 -right-1 flex items-center justify-center w-5 h-5 rounded-full bg-accent text-xs font-bold text-red-700 hidden">
                      5
                    </span>
                  </button>
                </a>
              </div> -->
              <% } %>
                <!-- Profile dropdown -->
                <div class="ml-3 relative">
                  <% if(!currUser) { %>
                    <a href="/login"
                      class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
                      SIGN IN
                    </a>
                    <% } else { %>
                      <div>
                        <button id="profile-menu-button" type="button" class="flex items-center text-sm  ">
                          <img class="h-9 w-9 rounded-full object-cover border-2 border-primary-400"
                            src="<%=user.image.url  %>" alt="User profile">
                        </button>
                      </div>

                      <!-- Dropdown menu -->
                      <div id="profile-dropdown"
                        class="hidden origin-top-right absolute right-0 mt-2 w-64 rounded-xl shadow-xl py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-10 transform transition-all duration-200">
                        <div class="px-4 py-3 border-b border-gray-100">
                          <div class="flex items-center space-x-3">
                            <img class="h-10 w-10 rounded-full object-cover border-2 border-primary-400"
                              src="<%=user.image.url  %>" alt="User profile">
                            <div>
                              <p class="text-sm font-semibold text-gray-800">
                                <%=user.name%>
                              </p>
                              <p class="text-xs text-gray-500">@<%=user.username%>
                              </p>
                            </div>
                          </div>
                        </div>
                        <a href="/dashbord"
                          class="block px-4 py-2 text-sm text-gray-700 hover:bg-primary-50 hover:text-primary-700 transition-colors duration-200"
                          role="menuitem">
                          <i class="ri-dashboard-line"></i> Dashboard
                        </a>
                        <a href="/profile"
                          class="block px-4 py-2 text-sm text-gray-700 hover:bg-primary-50 hover:text-primary-700 transition-colors duration-200"
                          role="menuitem">
                          <i class="ri-user-line"></i> Profile
                        </a>
                        </a>
                        <a href="/stories"
                          class="block px-4 py-2 text-sm text-gray-700 hover:bg-primary-50 hover:text-primary-700 transition-colors duration-200"
                          role="menuitem">
                          <i class="ri-stack-line"></i> Stories
                        </a>

                        <a href="/stories/newWrite"
                          class="block px-4 py-2 text-sm text-gray-700 hover:bg-primary-50 hover:text-primary-700 transition-colors duration-200"
                          role="menuitem">
                          <i class="ri-edit-2-line"></i> Write
                        </a>
                        <div class="border-t border-gray-100 mt-1">
                          <a href="/logout"
                            class="block px-4 py-2 text-sm text-gray-700 hover:bg-red-50 hover:text-red-700 transition-colors duration-200"
                            role="menuitem">
                            <i class="ri-logout-box-r-line"></i> Sign out
                          </a>
                        </div>
                      </div>
                      <%}%>
                </div>
          </div>
        </div>
      </div>
    </nav>
    <!-- NAVBAR END -->

    <% if(success && success.length){ %>
      <div
        class="fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end z-50"
        id="toast-success">
        <div
          class="max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden transition-all duration-300 transform translate-y-0 opacity-100">
          <div class="p-4">
            <div class="flex items-start">
              <div class="flex-shrink-0">
                <svg class="h-6 w-6 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                </svg>
              </div>
              <div class="ml-3 w-0 flex-1 pt-0.5">
                <p class="text-sm font-medium text-gray-900">
                  <%= success %>
                </p>
              </div>
              <div class="ml-4 flex-shrink-0 flex">
                <button
                  class="bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400">
                  <span class="sr-only">Close</span>
                  <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd"
                      d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                      clip-rule="evenodd" />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
      <% } %>


        <div id="page1" class="h-50 w-full">
          <div id="card-center" style=" width: 100%;
          min-height: 60%;
          padding: 4vw;
          background-color: #ffffff;
          display: flex;
          align-items: center;
          justify-content: center;
          gap: 2vw;
          flex-wrap: wrap;">
            <div class="bg-white rounded-lg  p-4 ">
              <div class="flex flex-col gap-3">
                <!-- Combined Search and Filters Row -->
              </div>
              <section>
                <button style="display: none;" id="confettiButton">Celebrate!</button>

                <!-- Container -->
                <div class="mx-auto w-full max-w-7xl px-5 py-16 md:px-10 md:py-20">
                  <!-- Component -->
                  <div class="flex flex-col items-center">
                    <!-- Title -->
                    <h2 class="text-center text-3xl font-bold md:text-5xl"> "Write. Share. Relate." </h2>
                    <p class="mb-8 mt-4 text-center text-sm text-gray-500 sm:text-base md:mb-12 lg:mb-16"> "Discover
                      genuine stories from people navigating overthinking. Share your own journey and find comfort in
                      knowing you're not alone."</p>
                    <!-- Content -->
                  </div>
                </div>
                <div class="flex flex-col sm:flex-row gap-2">

                  <div class="relative flex-grow">
                    <div class="absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400">
                      <i class="ri-search-line"></i>
                    </div>
                    <input id="searchInput" type="search"
                      class="w-full pl-10 pr-4 py-2 text-sm rounded-lg border border-gray-300 focus:outline-none focus:ring-1 focus:ring-blue-500"
                      placeholder="Search stories..." />
                  </div>


                  <select id="categoryFilter"
                    class="text-sm p-2 border hidden border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500">
                    <option value="">All Genres</option>
                    <option value="fantasy">Fantasy </option>
                    <option value="random-thoughts">random-thoughts</option>
                    <option value="poetry">Poetry</option>
                    <option value="sci-fi">Sci-Fi</option>
                    <option value="romance">Romance</option>
                    <option value="mystery">Mystery</option>
                    <option value="horror">Horror</option>
                    <option value="drama">adventure</option>
                    <option value="historical">Historical</option>
                    <option value="comedy">Comedy</option>
                    <option value="ya">Young / Adult</option>
                    <option value="children">Children</option>
                    <option value="Fanfiction">Fanfiction</option>
                    <option value="other">Other</option>
                  </select>

                  <select id="sortStories"
                    class="text-sm p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500">
                    <option value="newest">Newest First</option>
                    <option value="oldest">Oldest First</option>
                  </select>
                </div>
              </section>
            </div>
          </div>

          <div class="bg-white text-white container mx-auto px-4  ">
            <div class="relative max-w-full">
              <div class="flex space-x-2 pb-4 overflow-x-auto scrollbar-hide">

              </div>
            </div>
            <h2 class="text-2xl text-black font-semibold mb-6"> Stories</h2>

            <!-- Skeleton Loading Placeholder -->
            <div id="skeleton-loader"
              class="grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4 md:gap-6 min-h-[300px] hidden">
              <% for(let i=0; i<10; i++) { %>
                <div class="story-card bg-gray-100 rounded-lg overflow-hidden mb-2">
                  <div class="relative">
                    <div class="skeleton-loader w-full h-48"></div>
                    <div class="absolute inset-0 bg-gradient-to-t from-black to-transparent opacity-20"></div>
                    <div class="absolute bottom-0 left-0 p-3 w-full">
                      <div class="skeleton-loader h-6 w-3/4 mb-2"></div>
                      <div class="flex space-x-2">
                        <div class="skeleton-loader h-4 w-16"></div>
                        <div class="skeleton-loader h-4 w-16"></div>
                      </div>
                    </div>
                  </div>
                </div>
                <% } %>
            </div>


            <div id="stories-grid"
              class="grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4 md:gap-6 mb-16 min-h-[300px]">
              <% for(stories of storyData) { %>
                <a href="/stories/<%= stories._id %>" class="group">
                  <div
                    class="story-card bg-white rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow duration-200 border border-gray-100">
                    <div class="relative aspect-[4/3]">
                      <img src="<%= stories.image.url %>" alt="Story cover" class="w-full h-full object-cover"
                        loading="lazy">
                      <div class="absolute bottom-0 left-0 right-0 p-3 bg-gradient-to-t from-black/70 to-transparent">
                        <h3 class="font-semibold text-white text-base line-clamp-2">
                          <%= stories.title %>
                        </h3>
                      </div>
                      <div class="absolute top-2 right-2 text-white bg-black bg-opacity-70 px-2 py-1 rounded text-sm">
                        <i class="ri-eye-2-line"></i>
                        <%=stories.views.length %>
                      </div>
                    </div>
                    <div class="p-3">
                      <div class="flex items-center space-x-2">
                        <div class="flex-shrink-0 w-6 h-6 rounded-full overflow-hidden">
                          <img src="<%= stories.owner.image.url %>" alt="<%= stories.owner.username %>"
                            class="w-full h-full object-cover">
                        </div>
                        <div class="text-sm text-gray-600 truncate">
                          <span>
                            <%= stories.owner.username %>
                          </span>
                          <span class="mx-1">•</span>
                          <span id="date" class="text-gray-500 text-xs">
                            <%= stories.timeStamp %>
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>
                </a>
                <% } %>
            </div>


          </div>
          <% if(currUser) { %>
            <div
              class="fixed bottom-0 left-0 right-0 md:bottom-4 md:left-1/2 md:right-auto md:transform md:-translate-x-1/2 z-50">
              <div
                class="bg-white shadow-xl md:rounded-full px-6 py-3 flex items-center justify-around md:justify-center md:gap-12 border-t border-gray-200 md:border">

               <a href="/chat"
                  class="text-gray-700 hover:text-blue-600 transition flex flex-col items-center relative">
                  <div class="relative">
                    <i class="ri-message-3-line text-xl"></i>
                    <button onclick="markMessagesAsSeen()">
                      <span id="message-dot"
                        class="unread-count absolute -top-2 -right-2 bg-gray-200 text-gray-800 text-xs rounded-full h-5 w-5 flex items-center justify-center"></span>
                    </button>
                  </div>
                  <span class="text-xs mt-1 hidden md:block">Message</span>
                </a>
             
                <a href="/followers/<%=currUser._id%>"
                  class="text-gray-700 hover:text-blue-600 transition flex flex-col items-center">
                  <i class="ri-group-line text-xl"></i>
                  <span class="text-xs mt-1 hidden md:block">Followers</span>
                </a>

                <a href="/stories/newWrite"
                  class="text-gray-700 hover:text-blue-600 transition flex flex-col items-center">
                  <i class="fas fa-pen-nib text-xl"></i>
                  <span class="text-xs mt-1 hidden md:block">Write</span>
                </a>


                <a href="/notification"
                  class="text-gray-700 hover:text-blue-600 transition flex flex-col items-center relative">
                  <div class="relative">
                    <button onclick="markNotificationsSeen()">
                      <i class="ri-notification-3-line text-xl"></i>
                      <span id="red-dot"
                        class="absolute -top-2 -right-2 bg-gray-200 text-gray-800 text-xs rounded-full h-5 w-5 flex items-center justify-center">

                      </span>
                    </button>
                  </div>
                  <span class="text-xs mt-1 hidden md:block">Notifications</span>
                </a>

              </div>
            </div>
            <% } %>
        </div>


        <script src="./assets/vendor/canvas-confetti/dist/confetti.browser.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.6.0/dist/confetti.browser.min.js"></script>
       

        <script>
          document.addEventListener("DOMContentLoaded", function () {

            checkUnreadNotifications();
            checkUnreadMessages();


            setInterval(checkUnreadNotifications, 500);
            setInterval(checkUnreadMessages, 1000);
          });


          function checkUnreadNotifications() {
            fetch('/check-unread-notifications')
              .then(response => response.json())
              .then(data => {
                const dot = document.getElementById("notification-dot");
                if (data.success && data.unreadCount > 0) {
                  dot.classList.remove("hidden");
                  dot.textContent = data.unreadCount;
                } else {
                  dot.classList.add("hidden");
                }
              })
              .catch(error => console.error("Error:", error));
          }

          function markNotificationsSeen() {
            fetch('/mark-notifications-seen')
              .then(() => {
                document.getElementById("notification-dot").classList.add("hidden");
              })
              .catch(error => console.error("Error:", error));
          }

          // New Message functions
          function checkUnreadMessages() {
            fetch('/check-unread-messages')
              .then(response => response.json())
              .then(data => {
                const dot = document.getElementById("message-dot");
                if (data.success && data.unreadCount > 0) {
                  dot.classList.remove("hidden");
                  dot.textContent = data.unreadCount;
                } else {
                  dot.classList.add("hidden");
                }
              })
              .catch(error => console.error("Error checking messages:", error));
          }

          function markMessagesSeen() {
            fetch('/mark-messages-seen')
              .then(() => {
                document.getElementById("message-dot").classList.add("hidden");
              })
              .catch(error => console.error("Error marking messages as seen:", error));
          }
        </script>


        <script>

          function showLoading() {
            
            const skeleton = document.getElementById('skeleton-loader');
            const storiesGrid = document.getElementById('stories-grid');

            // Show skeleton first
            skeleton.classList.remove('hidden');
            storiesGrid.classList.add('hidden');

   
            document.body.style.overflow = 'hidden';
          }

          function hideLoading() {
           
            const skeleton = document.getElementById('skeleton-loader');
            const storiesGrid = document.getElementById('stories-grid');

            setTimeout(() => {
              skeleton.classList.add('hidden');
              storiesGrid.classList.remove('hidden');
              document.body.style.overflow = '';
            }, 300);
          }

          document.addEventListener('DOMContentLoaded', function () {
            const select = document.getElementById('categoryFilter');
            const container = document.querySelector('.flex.space-x-2');

            const iconMap = {};

       
            const colorMap = {
              '': 'blue',
              'fantasy': 'purple',
              'random-thoughts': 'yellow',
              'poetry': 'pink',
              'sci-fi': 'blue',
              'romance': 'red',
              'mystery': 'indigo',
              'horror': 'gray',
              'adventure': 'green',
              'historical': 'amber',
              'comedy': 'yellow',
              'ya': 'teal',
              'children': 'orange',
              'Fanfiction': 'purple',
              'other': 'gray'
            };

            // Create buttons for each option
            Array.from(select.options).forEach(option => {
              const btn = document.createElement('button');
              btn.type = 'button';
              btn.className = 'category-btn';
              btn.dataset.value = option.value;


              const text = document.createElement('span');
              text.textContent = option.text;
              btn.appendChild(text);

              if (option.selected) {
                btn.classList.add('active');
              }

              btn.addEventListener('click', () => {
                select.value = option.value;
                document.querySelectorAll('.category-btn').forEach(b => b.classList.remove('active'));
                btn.classList.add('active');
                const event = new Event('change');
                select.dispatchEvent(event);
              });

              container.appendChild(btn);
            });

            select.addEventListener('change', function () {
              document.querySelectorAll('.category-btn').forEach(btn => {
                btn.classList.toggle('active', btn.dataset.value === this.value);
              });
            });
          });

          setTimeout(() => {
            const toast = document.getElementById('toast-success');
            if (toast) {
              toast.style.display = "none";
              location.reload();
            }
          }, 3000);

          const flashMessage = "<%= success %>";
          if (flashMessage === 'your story is live!') {
            confetti({
              particleCount: 200,
              angle: Math.random() * 360,
              spread: 90 + Math.random() * 90,
              origin: { x: Math.random(), y: Math.random() },
              colors: ['#ff6347', '#ff4500', '#32cd32', '#1e90ff', '#ff1493'],
              shapes: ['circle', 'square', 'triangle'],
              gravity: 0.3 + Math.random() * 0.5,
              drift: Math.random() * 1 - 0.5
            });

            setTimeout(() => {
              confetti({
                particleCount: 500,
                spread: 360,
                origin: { x: 0.5, y: 0.5 },
                colors: ['#ff0000', '#00ff00', '#0000ff', '#ffff00'],
                shapes: ['circle'],
                gravity: 0.6,
                scalar: 1.2
              });
            }, 100);
          }

          document.querySelectorAll('#date').forEach(el => {
            const rawDate = new Date(el.innerText.replace('Last edited: ', '').trim());
            el.innerText = moment(rawDate).fromNow();
          });

          document.addEventListener("DOMContentLoaded", function () {
            checkUnreadNotifications();
            setInterval(checkUnreadNotifications, 5000);
          });

          function checkUnreadNotifications() {
            fetch('/check-unread-notifications')
              .then(response => response.json())
              .then(data => {
                const redDot = document.getElementById("red-dot");
                if (data.success && data.unreadCount > 0) {
                  redDot.classList.remove("hidden");
                  redDot.textContent = data.unreadCount;
                } else {
                  redDot.classList.add("hidden");
                }
              })
              .catch(error => console.error("Error fetching notifications:", error));
          }

          function markNotificationsSeen() {
            fetch('/mark-notifications-seen')
              .then(() => {
                document.getElementById("red-dot").classList.add("hidden");
              })
              .catch(error => console.error("Error marking notifications as seen:", error));
          }

          function updateDateFormatting() {
            document.querySelectorAll('#date').forEach(el => {
              const rawDate = new Date(el.innerText.replace('Last edited: ', '').trim());
              el.innerText = moment(rawDate).fromNow();
            });
          }

          function updateStories() {
            const search = document.getElementById("searchInput")?.value.trim() || '';
            const category = document.getElementById("categoryFilter")?.value || '';
            const sort = document.getElementById("sortStories")?.value || '';

            const query = new URLSearchParams({
              search: search,
              category: category,
              sort: sort
            });

            showLoading();

            fetch(`/stories?${query.toString()}`)
              .then(response => response.text())
              .then(html => {
                let parser = new DOMParser();
                let doc = parser.parseFromString(html, "text/html");
                let newStoryList = doc.querySelector("#stories-grid");

                if (newStoryList.children.length === 0) {
                  document.getElementById("stories-grid").innerHTML = `
                  <div class="col-span-full py-12 text-center text-gray-400">
                    <i class="ri-emotion-sad-line text-4xl mb-2"></i>
                    <p>No stories found</p>
                  </div>
                `;
                } else {
                  document.getElementById("stories-grid").innerHTML = newStoryList.innerHTML;
                }

                updateDateFormatting();
              })
              .catch(error => {
                console.error("Error fetching stories:", error);
                document.getElementById("stories-grid").innerHTML = `
                <div class="col-span-full py-12 text-center text-gray-400">
                  <i class="ri-alert-line text-4xl mb-2"></i>
                  <p>Error loading stories. Please try again.</p>
                </div>
              `;
              })
              .finally(() => {
                hideLoading();
              });
          }

          document.getElementById("searchInput")?.addEventListener("input", updateStories);
          document.getElementById("categoryFilter")?.addEventListener("change", updateStories);
          document.getElementById("sortStories")?.addEventListener("change", updateStories);

          const profileButton = document.getElementById('profile-menu-button');
          const profileDropdown = document.getElementById('profile-dropdown');

          profileButton.addEventListener('click', () => {
            profileDropdown.classList.toggle('hidden');
          });


          window.addEventListener('click', (event) => {
            if (!profileButton.contains(event.target)) {
              profileDropdown.classList.add('hidden');
            }
          });
        </script>

  </div>
</body>

</html>
